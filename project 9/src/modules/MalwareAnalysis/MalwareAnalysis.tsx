import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { 
  ArrowLeft, Bug, FileText, AlertTriangle, CheckCircle, 
  XCircle, Clock, Shield, Eye, Search, ArrowRight
} from 'lucide-react';
import { motion, AnimatePresence } from 'framer-motion';
import { ThemeToggle } from '../../components/ThemeToggle';
import { useTheme } from '../../App';

interface MalwareAnalysisProps {
  onComplete: (score: number, timeSpent: number) => void;
}

interface MalwareFile {
  id: string;
  filename: string;
  size: string;
  type: string;
  hash: string;
  isMalicious: boolean;
  indicators: string[];
  explanation: string;
  malwareType?: string;
  behavior?: string[];
}

const malwareFiles: MalwareFile[] = [
  {
    id: 'file-1',
    filename: 'invoice.pdf.exe',
    size: '2.3 MB',
    type: 'Executable',
    hash: 'a1b2c3d4e5f6789012345678901234567890abcd',
    isMalicious: true,
    indicators: [
      'Double file extension (.pdf.exe)',
      'Executable disguised as PDF',
      'Suspicious file size for PDF',
      'Unknown publisher/no digital signature'
    ],
    explanation: 'This is a classic malware technique using double extensions to trick users into thinking it\'s a PDF document.',
    malwareType: 'Trojan',
    behavior: ['File system modification', 'Network communication', 'Registry changes']
  },
  {
    id: 'file-2',
    filename: 'system_update.exe',
    size: '45.2 MB',
    type: 'Executable',
    hash: 'b2c3d4e5f6789012345678901234567890abcdef',
    isMalicious: true,
    indicators: [
      'Mimics legitimate system file name',
      'Large file size for system utility',
      'No digital signature from Microsoft',
      'High entropy (packed/encrypted)'
    ],
    explanation: 'Malware often disguises itself as legitimate system files to avoid detection.',
    malwareType: 'Backdoor',
    behavior: ['Creates persistence mechanism', 'Opens network backdoor', 'Disables security software']
  },
  {
    id: 'file-3',
    filename: 'photo_viewer.exe',
    size: '1.2 MB',
    type: 'Executable',
    hash: 'c3d4e5f6789012345678901234567890abcdef12',
    isMalicious: false,
    indicators: [],
    explanation: 'This appears to be a legitimate photo viewing application with proper digital signatures and normal behavior.',
    behavior: ['File association registration', 'Normal GUI operations', 'Standard file access']
  },
  {
    id: 'file-4',
    filename: 'urgent_payment.doc',
    size: '156 KB',
    type: 'Word Document',
    hash: 'd4e5f6789012345678901234567890abcdef1234',
    isMalicious: true,
    indicators: [
      'Contains embedded macros',
      'Macro auto-execution enabled',
      'Suspicious macro code patterns',
      'Downloads external payload'
    ],
    explanation: 'Malicious Office documents often use macros to download and execute additional malware.',
    malwareType: 'Macro Virus',
    behavior: ['Macro execution', 'External file download', 'Process injection']
  },
  {
    id: 'file-5',
    filename: 'readme.txt',
    size: '2 KB',
    type: 'Text File',
    hash: 'e5f6789012345678901234567890abcdef123456',
    isMalicious: false,
    indicators: [],
    explanation: 'Plain text files generally pose no security risk as they cannot execute code.',
    behavior: ['Text display only', 'No executable content', 'Safe to open']
  }
];

export const MalwareAnalysis: React.FC<MalwareAnalysisProps> = ({ onComplete }) => {
  const { isDark } = useTheme();
  const [currentStep, setCurrentStep] = useState<'intro' | 'analysis' | 'results'>('intro');
  const [currentFileIndex, setCurrentFileIndex] = useState(0);
  const [userAnswers, setUserAnswers] = useState<boolean[]>([]);
  const [timeRemaining, setTimeRemaining] = useState(2100); // 35 minutes
  const [startTime] = useState(Date.now());
  const [showExplanation, setShowExplanation] = useState(false);
  const [selectedAnswer, setSelectedAnswer] = useState<boolean | null>(null);

  const currentFile = malwareFiles[currentFileIndex];

  useEffect(() => {
    if (currentStep === 'analysis' && !showExplanation) {
      const timer = setInterval(() => {
        setTimeRemaining((prev) => {
          if (prev <= 1) {
            handleComplete();
            return 0;
          }
          return prev - 1;
        });
      }, 1000);

      return () => clearInterval(timer);
    }
  }, [currentStep, showExplanation]);

  const handleAnswer = (isMalicious: boolean) => {
    setSelectedAnswer(isMalicious);
    const newAnswers = [...userAnswers, isMalicious];
    setUserAnswers(newAnswers);
    setShowExplanation(true);
  };

  const handleNextFile = () => {
    setShowExplanation(false);
    setSelectedAnswer(null);
    
    if (currentFileIndex === malwareFiles.length - 1) {
      handleComplete();
    } else {
      setCurrentFileIndex(prev => prev + 1);
    }
  };

  const handleComplete = (finalAnswers = userAnswers) => {
    const correctAnswers = finalAnswers.filter((answer, index) => 
      answer === malwareFiles[index].isMalicious
    ).length;
    
    const score = Math.round((correctAnswers / malwareFiles.length) * 100);
    const timeSpent = Math.round((Date.now() - startTime) / 1000);
    
    setCurrentStep('results');
    onComplete(score, timeSpent);
  };

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const getFileIcon = (type: string) => {
    switch (type) {
      case 'Executable': return Bug;
      case 'Word Document': return FileText;
      case 'Text File': return FileText;
      default: return FileText;
    }
  };

  const getFileColor = (type: string, isMalicious: boolean) => {
    if (isMalicious) {
      return isDark ? 'text-red-400' : 'text-red-600';
    }
    switch (type) {
      case 'Executable': return isDark ? 'text-blue-400' : 'text-blue-600';
      case 'Word Document': return isDark ? 'text-green-400' : 'text-green-600';
      case 'Text File': return isDark ? 'text-gray-400' : 'text-gray-600';
      default: return isDark ? 'text-gray-400' : 'text-gray-600';
    }
  };

  if (currentStep === 'intro') {
    return (
      <div className={`min-h-screen ${
        isDark ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'
      }`}>
        {/* Header */}
        <div className={`border-b ${
          isDark ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
        }`}>
          <div className="max-w-6xl mx-auto px-6 py-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <Link 
                  to="/"
                  className={`p-2 rounded-lg mr-4 ${
                    isDark ? 'hover:bg-gray-700' : 'hover:bg-gray-100'
                  }`}
                >
                  <ArrowLeft className={`h-5 w-5 ${
                    isDark ? 'text-gray-400' : 'text-gray-600'
                  }`} />
                </Link>
                <div className="flex items-center">
                  <div className="w-12 h-12 rounded-lg mr-4 overflow-hidden">
                    <img 
                      src="https://images.pexels.com/photos/5380792/pexels-photo-5380792.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&fit=crop"
                      alt="Malware Analysis"
                      className="w-full h-full object-cover"
                    />
                  </div>
                  <div>
                    <h1 className={`text-2xl font-bold ${
                      isDark ? 'text-white' : 'text-gray-900'
                    }`}>Malware Analysis Lab</h1>
                    <p className={`text-sm ${
                      isDark ? 'text-gray-400' : 'text-gray-600'
                    }`}>Learn to identify malicious files and understand attack patterns</p>
                  </div>
                </div>
              </div>
              <ThemeToggle />
            </div>
          </div>
        </div>

        <div className="max-w-4xl mx-auto px-6 py-12">
          <div className={`rounded-lg border p-8 ${
            isDark ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
          }`}>
            <div className="text-center mb-8">
              <div className="w-16 h-16 rounded-lg mx-auto mb-4 overflow-hidden">
                <img 
                  src="https://images.pexels.com/photos/5380792/pexels-photo-5380792.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&fit=crop"
                  alt="Malware Analysis"
                  className="w-full h-full object-cover"
                />
              </div>
              <h2 className={`text-2xl font-bold mb-4 ${
                isDark ? 'text-white' : 'text-gray-900'
              }`}>Malware Analysis Challenge</h2>
              <p className={`text-lg ${
                isDark ? 'text-gray-300' : 'text-gray-700'
              }`}>
                Analyze suspicious files and identify potential malware using static analysis techniques
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
              <div className={`p-6 rounded-lg border ${
                isDark ? 'border-gray-600 bg-gray-700/30' : 'border-gray-200 bg-gray-50'
              }`}>
                <Eye className={`h-8 w-8 mb-3 ${
                  isDark ? 'text-pink-400' : 'text-pink-600'
                }`} />
                <h3 className={`font-bold mb-2 ${
                  isDark ? 'text-white' : 'text-gray-900'
                }`}>Static Analysis</h3>
                <p className={`text-sm ${
                  isDark ? 'text-gray-400' : 'text-gray-600'
                }`}>
                  Examine file properties, metadata, and characteristics without execution
                </p>
              </div>

              <div className={`p-6 rounded-lg border ${
                isDark ? 'border-gray-600 bg-gray-700/30' : 'border-gray-200 bg-gray-50'
              }`}>
                <Search className={`h-8 w-8 mb-3 ${
                  isDark ? 'text-blue-400' : 'text-blue-600'
                }`} />
                <h3 className={`font-bold mb-2 ${
                  isDark ? 'text-white' : 'text-gray-900'
                }`}>Indicator Analysis</h3>
                <p className={`text-sm ${
                  isDark ? 'text-gray-400' : 'text-gray-600'
                }`}>
                  Identify suspicious patterns, file extensions, and behavioral indicators
                </p>
              </div>

              <div className={`p-6 rounded-lg border ${
                isDark ? 'border-gray-600 bg-gray-700/30' : 'border-gray-200 bg-gray-50'
              }`}>
                <Shield className={`h-8 w-8 mb-3 ${
                  isDark ? 'text-green-400' : 'text-green-600'
                }`} />
                <h3 className={`font-bold mb-2 ${
                  isDark ? 'text-white' : 'text-gray-900'
                }`}>Threat Classification</h3>
                <p className={`text-sm ${
                  isDark ? 'text-gray-400' : 'text-gray-600'
                }`}>
                  Categorize threats and understand different malware types
                </p>
              </div>

              <div className={`p-6 rounded-lg border ${
                isDark ? 'border-gray-600 bg-gray-700/30' : 'border-gray-200 bg-gray-50'
              }`}>
                <AlertTriangle className={`h-8 w-8 mb-3 ${
                  isDark ? 'text-yellow-400' : 'text-yellow-600'
                }`} />
                <h3 className={`font-bold mb-2 ${
                  isDark ? 'text-white' : 'text-gray-900'
                }`}>Risk Assessment</h3>
                <p className={`text-sm ${
                  isDark ? 'text-gray-400' : 'text-gray-600'
                }`}>
                  Evaluate potential impact and determine appropriate response
                </p>
              </div>
            </div>

            <div className={`p-6 rounded-lg border mb-8 ${
              isDark ? 'bg-blue-800/20 border-blue-600/30' : 'bg-blue-50 border-blue-200'
            }`}>
              <h3 className={`font-bold mb-3 ${
                isDark ? 'text-blue-400' : 'text-blue-700'
              }`}>Analysis Process</h3>
              <div className="space-y-2 text-sm">
                <p className={isDark ? 'text-blue-200' : 'text-blue-700'}>
                  • Examine 5 different files with varying threat levels
                </p>
                <p className={isDark ? 'text-blue-200' : 'text-blue-700'}>
                  • Analyze file properties, extensions, and metadata
                </p>
                <p className={isDark ? 'text-blue-200' : 'text-blue-700'}>
                  • Identify suspicious indicators and behavioral patterns
                </p>
                <p className={isDark ? 'text-blue-200' : 'text-blue-700'}>
                  • Make informed decisions about file safety
                </p>
              </div>
            </div>

            <div className="text-center">
              <button
                onClick={() => setCurrentStep('analysis')}
                className={`px-6 py-3 rounded-lg font-medium ${
                  isDark 
                    ? 'bg-pink-600 hover:bg-pink-700 text-white' 
                    : 'bg-pink-600 hover:bg-pink-700 text-white'
                }`}
              >
                Start Malware Analysis
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (currentStep === 'results') {
    const correctAnswers = userAnswers.filter((answer, index) => 
      answer === malwareFiles[index].isMalicious
    ).length;
    const score = Math.round((correctAnswers / malwareFiles.length) * 100);

    return (
      <div className={`min-h-screen ${
        isDark ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'
      }`}>
        <div className="max-w-4xl mx-auto px-6 py-8">
          <div className="flex justify-end mb-4">
            <ThemeToggle />
          </div>
          
          <div className="text-center mb-8">
            <div className="w-16 h-16 rounded-lg mx-auto mb-4 overflow-hidden">
              <img 
                src="https://images.pexels.com/photos/5380792/pexels-photo-5380792.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&fit=crop"
                alt="Malware Analysis"
                className="w-full h-full object-cover"
              />
            </div>
            <h1 className={`text-2xl font-bold mb-2 ${
              isDark ? 'text-white' : 'text-gray-900'
            }`}>Malware Analysis Complete!</h1>
            <p className={isDark ? 'text-gray-400' : 'text-gray-600'}>
              Here's how well you identified malicious files
            </p>
          </div>

          <div className={`rounded-lg border p-6 mb-6 ${
            isDark ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
          }`}>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
              <div className="text-center">
                <div className={`text-3xl font-bold mb-2 ${
                  isDark ? 'text-pink-400' : 'text-pink-600'
                }`}>{score}%</div>
                <div className={`text-sm ${isDark ? 'text-gray-400' : 'text-gray-600'}`}>Detection Rate</div>
              </div>
              <div className="text-center">
                <div className={`text-3xl font-bold mb-2 ${
                  isDark ? 'text-green-400' : 'text-green-600'
                }`}>{correctAnswers}</div>
                <div className={`text-sm ${isDark ? 'text-gray-400' : 'text-gray-600'}`}>Correct</div>
              </div>
              <div className="text-center">
                <div className={`text-3xl font-bold mb-2 ${
                  isDark ? 'text-red-400' : 'text-red-600'
                }`}>{malwareFiles.length - correctAnswers}</div>
                <div className={`text-sm ${isDark ? 'text-gray-400' : 'text-gray-600'}`}>Missed</div>
              </div>
            </div>

            <div className={`text-center p-4 rounded-lg border ${
              isDark ? 'bg-blue-800/20 border-blue-600/30' : 'bg-blue-50 border-blue-200'
            }`}>
              <p className={`text-sm ${isDark ? 'text-blue-200' : 'text-blue-700'}`}>
                {score >= 90 ? 'Excellent! You have strong malware detection skills.' :
                 score >= 75 ? 'Good work! You identified most malicious files correctly.' :
                 score >= 60 ? 'Not bad, but be more careful when analyzing suspicious files.' :
                 'Keep practicing! Malware analysis requires attention to detail and experience.'}
              </p>
            </div>
          </div>

          <div className="text-center">
            <Link
              to="/"
              className={`px-6 py-3 rounded-lg font-medium ${
                isDark 
                  ? 'bg-pink-600 hover:bg-pink-700 text-white' 
                  : 'bg-pink-600 hover:bg-pink-700 text-white'
              }`}
            >
              Back to Dashboard
            </Link>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className={`min-h-screen ${
      isDark ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'
    }`}>
      {/* Header */}
      <div className={`border-b ${
        isDark ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
      }`}>
        <div className="max-w-6xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center">
              <Link 
                to="/"
                className={`p-2 rounded-lg mr-4 ${
                  isDark ? 'hover:bg-gray-700' : 'hover:bg-gray-100'
                }`}
              >
                <ArrowLeft className={`h-5 w-5 ${
                  isDark ? 'text-gray-400' : 'text-gray-600'
                }`} />
              </Link>
              <div>
                <h1 className={`text-xl font-bold ${
                  isDark ? 'text-white' : 'text-gray-900'
                }`}>Malware Analysis Lab</h1>
                <p className={`text-sm ${
                  isDark ? 'text-gray-400' : 'text-gray-600'
                }`}>Analyze files for malicious behavior</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-6">
              <div className="text-center">
                <div className={`text-sm ${
                  isDark ? 'text-gray-400' : 'text-gray-600'
                }`}>File</div>
                <div className={`text-lg font-bold ${
                  isDark ? 'text-white' : 'text-gray-900'
                }`}>
                  {currentFileIndex + 1} / {malwareFiles.length}
                </div>
              </div>
              
              <div className="flex items-center space-x-2">
                <Clock className={`h-5 w-5 ${
                  timeRemaining < 60 
                    ? 'text-red-400' 
                    : isDark ? 'text-pink-400' : 'text-pink-600'
                }`} />
                <span className={`font-mono text-xl font-bold ${
                  timeRemaining < 60 
                    ? 'text-red-400' 
                    : isDark ? 'text-white' : 'text-gray-900'
                }`}>
                  {formatTime(timeRemaining)}
                </span>
              </div>
              
              <ThemeToggle />
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-6 py-8">
        <AnimatePresence mode="wait">
          {!showExplanation ? (
            <motion.div
              key="file"
              initial={{ opacity: 0, x: 50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -50 }}
              className={`rounded-lg border ${
                isDark ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
              }`}
            >
              {/* File Header */}
              <div className={`p-6 border-b ${
                isDark ? 'border-gray-700' : 'border-gray-200'
              }`}>
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center">
                    {React.createElement(getFileIcon(currentFile.type), {
                      className: `h-8 w-8 mr-4 ${getFileColor(currentFile.type, false)}`
                    })}
                    <div>
                      <h2 className={`text-xl font-bold ${
                        isDark ? 'text-white' : 'text-gray-900'
                      }`}>File Analysis</h2>
                      <p className={`text-sm ${
                        isDark ? 'text-gray-400' : 'text-gray-600'
                      }`}>Examine this file for potential threats</p>
                    </div>
                  </div>
                </div>
              </div>

              {/* File Details */}
              <div className="p-6">
                <div className={`p-6 rounded-lg border mb-6 ${
                  isDark ? 'border-gray-600 bg-gray-700/30' : 'border-gray-200 bg-gray-50'
                }`}>
                  <h3 className={`font-bold mb-4 ${
                    isDark ? 'text-white' : 'text-gray-900'
                  }`}>File Properties</h3>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                    <div>
                      <label className={`text-sm font-medium ${
                        isDark ? 'text-gray-400' : 'text-gray-600'
                      }`}>Filename:</label>
                      <div className={`font-mono text-lg ${
                        isDark ? 'text-white' : 'text-gray-900'
                      }`}>{currentFile.filename}</div>
                    </div>
                    
                    <div>
                      <label className={`text-sm font-medium ${
                        isDark ? 'text-gray-400' : 'text-gray-600'
                      }`}>File Type:</label>
                      <div className={`font-medium ${
                        isDark ? 'text-white' : 'text-gray-900'
                      }`}>{currentFile.type}</div>
                    </div>
                    
                    <div>
                      <label className={`text-sm font-medium ${
                        isDark ? 'text-gray-400' : 'text-gray-600'
                      }`}>File Size:</label>
                      <div className={`font-medium ${
                        isDark ? 'text-white' : 'text-gray-900'
                      }`}>{currentFile.size}</div>
                    </div>
                    
                    <div>
                      <label className={`text-sm font-medium ${
                        isDark ? 'text-gray-400' : 'text-gray-600'
                      }`}>Hash (SHA-1):</label>
                      <div className={`font-mono text-sm ${
                        isDark ? 'text-gray-300' : 'text-gray-700'
                      }`}>{currentFile.hash}</div>
                    </div>
                  </div>

                  {currentFile.behavior && (
                    <div>
                      <label className={`text-sm font-medium mb-2 block ${
                        isDark ? 'text-gray-400' : 'text-gray-600'
                      }`}>Observed Behavior:</label>
                      <ul className="space-y-1">
                        {currentFile.behavior.map((behavior, idx) => (
                          <li key={idx} className={`flex items-start text-sm ${
                            isDark ? 'text-gray-300' : 'text-gray-700'
                          }`}>
                            <span className="mr-2">•</span>
                            <span>{behavior}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  )}
                </div>

                <div className="text-center">
                  <h3 className={`text-lg font-bold mb-4 ${
                    isDark ? 'text-white' : 'text-gray-900'
                  }`}>Is this file malicious?</h3>
                  <p className={`text-sm mb-6 ${
                    isDark ? 'text-gray-400' : 'text-gray-600'
                  }`}>
                    Consider the filename, file type, size, behavior, and any suspicious patterns
                  </p>
                  
                  <div className="flex justify-center space-x-6">
                    <button
                      onClick={() => handleAnswer(true)}
                      className={`px-6 py-3 rounded-lg font-medium flex items-center ${
                        isDark 
                          ? 'bg-red-600 hover:bg-red-700 text-white' 
                          : 'bg-red-600 hover:bg-red-700 text-white'
                      }`}
                    >
                      <AlertTriangle className="h-5 w-5 mr-2" />
                      Malicious
                    </button>
                    
                    <button
                      onClick={() => handleAnswer(false)}
                      className={`px-6 py-3 rounded-lg font-medium flex items-center ${
                        isDark 
                          ? 'bg-green-600 hover:bg-green-700 text-white' 
                          : 'bg-green-600 hover:bg-green-700 text-white'
                      }`}
                    >
                      <Shield className="h-5 w-5 mr-2" />
                      Safe
                    </button>
                  </div>
                </div>
              </div>
            </motion.div>
          ) : (
            <motion.div
              key="explanation"
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              exit={{ opacity: 0, scale: 0.9 }}
              className={`rounded-lg border p-8 text-center ${
                isDark ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
              }`}
            >
              <div className="mb-6">
                {selectedAnswer === currentFile.isMalicious ? (
                  <CheckCircle className={`h-12 w-12 mx-auto mb-4 ${
                    isDark ? 'text-green-400' : 'text-green-600'
                  }`} />
                ) : (
                  <XCircle className={`h-12 w-12 mx-auto mb-4 ${
                    isDark ? 'text-red-400' : 'text-red-600'
                  }`} />
                )}
                
                <h3 className={`text-xl font-bold mb-2 ${
                  selectedAnswer === currentFile.isMalicious
                    ? isDark ? 'text-green-400' : 'text-green-600'
                    : isDark ? 'text-red-400' : 'text-red-600'
                }`}>
                  {selectedAnswer === currentFile.isMalicious ? 'Correct!' : 'Incorrect'}
                </h3>
                
                <p className={`text-lg ${
                  isDark ? 'text-gray-300' : 'text-gray-700'
                }`}>
                  This file is {currentFile.isMalicious ? 'malicious' : 'safe'}
                  {currentFile.malwareType && ` (${currentFile.malwareType})`}
                </p>
              </div>

              <div className={`p-4 rounded-lg border mb-6 ${
                currentFile.isMalicious
                  ? isDark 
                    ? 'bg-red-800/20 border-red-600/30' 
                    : 'bg-red-50 border-red-200'
                  : isDark 
                    ? 'bg-green-800/20 border-green-600/30' 
                    : 'bg-green-50 border-green-200'
              }`}>
                <p className={`mb-4 ${
                  currentFile.isMalicious
                    ? isDark ? 'text-red-200' : 'text-red-700'
                    : isDark ? 'text-green-200' : 'text-green-700'
                }`}>
                  {currentFile.explanation}
                </p>

                {currentFile.indicators.length > 0 && (
                  <div>
                    <h4 className={`font-bold mb-2 ${
                      currentFile.isMalicious
                        ? isDark ? 'text-red-400' : 'text-red-700'
                        : isDark ? 'text-green-400' : 'text-green-700'
                    }`}>
                      {currentFile.isMalicious ? 'Malicious Indicators:' : 'Safe Indicators:'}
                    </h4>
                    <ul className="text-left space-y-1">
                      {currentFile.indicators.map((indicator, idx) => (
                        <li key={idx} className={`flex items-start text-sm ${
                          currentFile.isMalicious
                            ? isDark ? 'text-red-200' : 'text-red-700'
                            : isDark ? 'text-green-200' : 'text-green-700'
                        }`}>
                          <span className="mr-2">•</span>
                          <span>{indicator}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>

              <button
                onClick={handleNextFile}
                className={`px-8 py-3 rounded-lg font-medium flex items-center mx-auto ${
                  isDark 
                    ? 'bg-pink-600 hover:bg-pink-700 text-white' 
                    : 'bg-pink-600 hover:bg-pink-700 text-white'
                }`}
              >
                {currentFileIndex === malwareFiles.length - 1 ? 'Complete Analysis' : 'Next File'}
                <ArrowRight className="h-5 w-5 ml-2" />
              </button>
            </motion.div>
          )}
        </AnimatePresence>
      </div>
    </div>
  );
};